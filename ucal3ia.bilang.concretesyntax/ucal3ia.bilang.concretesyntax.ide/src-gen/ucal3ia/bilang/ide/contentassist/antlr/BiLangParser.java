/*
 * generated by Xtext 2.25.0
 */
package ucal3ia.bilang.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import ucal3ia.bilang.ide.contentassist.antlr.internal.InternalBiLangParser;
import ucal3ia.bilang.services.BiLangGrammarAccess;

public class BiLangParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(BiLangGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, BiLangGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getFilteringStepAccess().getAlternatives(), "rule__FilteringStep__Alternatives");
			builder.put(grammarAccess.getPreprocessingStepAccess().getAlternatives(), "rule__PreprocessingStep__Alternatives");
			builder.put(grammarAccess.getPlotAccess().getAlternatives(), "rule__Plot__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getCountPreprocessingStepAccess().getAlternatives_2(), "rule__CountPreprocessingStep__Alternatives_2");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getAlternatives_0(), "rule__CountQuantiStatement__Alternatives_0");
			builder.put(grammarAccess.getNullReplacementAccess().getAlternatives_2(), "rule__NullReplacement__Alternatives_2");
			builder.put(grammarAccess.getEFloatAccess().getAlternatives_4_0(), "rule__EFloat__Alternatives_4_0");
			builder.put(grammarAccess.getDonutPlotAccess().getAlternatives_3(), "rule__DonutPlot__Alternatives_3");
			builder.put(grammarAccess.getPiePlotAccess().getAlternatives_3(), "rule__PiePlot__Alternatives_3");
			builder.put(grammarAccess.getMathOperatorAccess().getAlternatives(), "rule__MathOperator__Alternatives");
			builder.put(grammarAccess.getStatisticalOperatorAccess().getAlternatives(), "rule__StatisticalOperator__Alternatives");
			builder.put(grammarAccess.getQualitativeOperatorAccess().getAlternatives(), "rule__QualitativeOperator__Alternatives");
			builder.put(grammarAccess.getRangeOperatorAccess().getAlternatives(), "rule__RangeOperator__Alternatives");
			builder.put(grammarAccess.getQuantitativeOperatorAccess().getAlternatives(), "rule__QuantitativeOperator__Alternatives");
			builder.put(grammarAccess.getTaskAccess().getGroup(), "rule__Task__Group__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_5(), "rule__Task__Group_5__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_6(), "rule__Task__Group_6__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_6_1(), "rule__Task__Group_6_1__0");
			builder.put(grammarAccess.getFileExtractorAccess().getGroup(), "rule__FileExtractor__Group__0");
			builder.put(grammarAccess.getFileExtractorAccess().getGroup_3(), "rule__FileExtractor__Group_3__0");
			builder.put(grammarAccess.getFileExtractorAccess().getGroup_3_2(), "rule__FileExtractor__Group_3_2__0");
			builder.put(grammarAccess.getDataFilteringAccess().getGroup(), "rule__DataFiltering__Group__0");
			builder.put(grammarAccess.getDataFilteringAccess().getGroup_2(), "rule__DataFiltering__Group_2__0");
			builder.put(grammarAccess.getDataFilteringAccess().getGroup_2_0(), "rule__DataFiltering__Group_2_0__0");
			builder.put(grammarAccess.getDataFilteringAccess().getGroup_2_0_2(), "rule__DataFiltering__Group_2_0_2__0");
			builder.put(grammarAccess.getDataFilteringAccess().getGroup_2_1(), "rule__DataFiltering__Group_2_1__0");
			builder.put(grammarAccess.getDataFilteringAccess().getGroup_2_1_2(), "rule__DataFiltering__Group_2_1_2__0");
			builder.put(grammarAccess.getDataFilteringAccess().getGroup_2_2(), "rule__DataFiltering__Group_2_2__0");
			builder.put(grammarAccess.getDataFilteringAccess().getGroup_2_2_2(), "rule__DataFiltering__Group_2_2_2__0");
			builder.put(grammarAccess.getCountPreprocessingStepAccess().getGroup(), "rule__CountPreprocessingStep__Group__0");
			builder.put(grammarAccess.getCountQualiStatementAccess().getGroup(), "rule__CountQualiStatement__Group__0");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getGroup(), "rule__CountQuantiStatement__Group__0");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getGroup_0_0(), "rule__CountQuantiStatement__Group_0_0__0");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getGroup_0_1(), "rule__CountQuantiStatement__Group_0_1__0");
			builder.put(grammarAccess.getDashBoardAccess().getGroup(), "rule__DashBoard__Group__0");
			builder.put(grammarAccess.getDashBoardAccess().getGroup_2(), "rule__DashBoard__Group_2__0");
			builder.put(grammarAccess.getNullReplacementAccess().getGroup(), "rule__NullReplacement__Group__0");
			builder.put(grammarAccess.getQuantitativeFilteringAccess().getGroup(), "rule__QuantitativeFiltering__Group__0");
			builder.put(grammarAccess.getQualitativeFilteringAccess().getGroup(), "rule__QualitativeFiltering__Group__0");
			builder.put(grammarAccess.getMathOperationAccess().getGroup(), "rule__MathOperation__Group__0");
			builder.put(grammarAccess.getMathOperationAccess().getGroup_0(), "rule__MathOperation__Group_0__0");
			builder.put(grammarAccess.getColReferenceAccess().getGroup(), "rule__ColReference__Group__0");
			builder.put(grammarAccess.getStatisticalOperationAccess().getGroup(), "rule__StatisticalOperation__Group__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup(), "rule__EFloat__Group__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup_4(), "rule__EFloat__Group_4__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getBarPlotAccess().getGroup(), "rule__BarPlot__Group__0");
			builder.put(grammarAccess.getBarPlotAccess().getGroup_8(), "rule__BarPlot__Group_8__0");
			builder.put(grammarAccess.getBarPlotAccess().getGroup_9(), "rule__BarPlot__Group_9__0");
			builder.put(grammarAccess.getBarPlotAccess().getGroup_10(), "rule__BarPlot__Group_10__0");
			builder.put(grammarAccess.getLinePlotAccess().getGroup(), "rule__LinePlot__Group__0");
			builder.put(grammarAccess.getLinePlotAccess().getGroup_8(), "rule__LinePlot__Group_8__0");
			builder.put(grammarAccess.getLinePlotAccess().getGroup_9(), "rule__LinePlot__Group_9__0");
			builder.put(grammarAccess.getLinePlotAccess().getGroup_10(), "rule__LinePlot__Group_10__0");
			builder.put(grammarAccess.getDonutPlotAccess().getGroup(), "rule__DonutPlot__Group__0");
			builder.put(grammarAccess.getDonutPlotAccess().getGroup_3_0(), "rule__DonutPlot__Group_3_0__0");
			builder.put(grammarAccess.getDonutPlotAccess().getGroup_3_1(), "rule__DonutPlot__Group_3_1__0");
			builder.put(grammarAccess.getDonutPlotAccess().getGroup_4(), "rule__DonutPlot__Group_4__0");
			builder.put(grammarAccess.getDonutPlotAccess().getGroup_5(), "rule__DonutPlot__Group_5__0");
			builder.put(grammarAccess.getDonutPlotAccess().getGroup_6(), "rule__DonutPlot__Group_6__0");
			builder.put(grammarAccess.getPiePlotAccess().getGroup(), "rule__PiePlot__Group__0");
			builder.put(grammarAccess.getPiePlotAccess().getGroup_3_0(), "rule__PiePlot__Group_3_0__0");
			builder.put(grammarAccess.getPiePlotAccess().getGroup_3_1(), "rule__PiePlot__Group_3_1__0");
			builder.put(grammarAccess.getPiePlotAccess().getGroup_4(), "rule__PiePlot__Group_4__0");
			builder.put(grammarAccess.getPiePlotAccess().getGroup_5(), "rule__PiePlot__Group_5__0");
			builder.put(grammarAccess.getPiePlotAccess().getGroup_6(), "rule__PiePlot__Group_6__0");
			builder.put(grammarAccess.getPolarPlotAccess().getGroup(), "rule__PolarPlot__Group__0");
			builder.put(grammarAccess.getPolarPlotAccess().getGroup_7(), "rule__PolarPlot__Group_7__0");
			builder.put(grammarAccess.getPolarPlotAccess().getGroup_8(), "rule__PolarPlot__Group_8__0");
			builder.put(grammarAccess.getPolarPlotAccess().getGroup_9(), "rule__PolarPlot__Group_9__0");
			builder.put(grammarAccess.getScatterPlotAccess().getGroup(), "rule__ScatterPlot__Group__0");
			builder.put(grammarAccess.getScatterPlotAccess().getGroup_7(), "rule__ScatterPlot__Group_7__0");
			builder.put(grammarAccess.getScatterPlotAccess().getGroup_8(), "rule__ScatterPlot__Group_8__0");
			builder.put(grammarAccess.getScatterPlotAccess().getGroup_9(), "rule__ScatterPlot__Group_9__0");
			builder.put(grammarAccess.getRadarPlotAccess().getGroup(), "rule__RadarPlot__Group__0");
			builder.put(grammarAccess.getRadarPlotAccess().getGroup_7(), "rule__RadarPlot__Group_7__0");
			builder.put(grammarAccess.getRadarPlotAccess().getGroup_8(), "rule__RadarPlot__Group_8__0");
			builder.put(grammarAccess.getRadarPlotAccess().getGroup_9(), "rule__RadarPlot__Group_9__0");
			builder.put(grammarAccess.getTaskAccess().getNameAssignment_1(), "rule__Task__NameAssignment_1");
			builder.put(grammarAccess.getTaskAccess().getFileextractorAssignment_4(), "rule__Task__FileextractorAssignment_4");
			builder.put(grammarAccess.getTaskAccess().getDatafilteringAssignment_5_0(), "rule__Task__DatafilteringAssignment_5_0");
			builder.put(grammarAccess.getTaskAccess().getDatafilteringAssignment_5_1(), "rule__Task__DatafilteringAssignment_5_1");
			builder.put(grammarAccess.getTaskAccess().getFileextractorAssignment_6_0(), "rule__Task__FileextractorAssignment_6_0");
			builder.put(grammarAccess.getTaskAccess().getDatafilteringAssignment_6_1_0(), "rule__Task__DatafilteringAssignment_6_1_0");
			builder.put(grammarAccess.getTaskAccess().getDatafilteringAssignment_6_1_1(), "rule__Task__DatafilteringAssignment_6_1_1");
			builder.put(grammarAccess.getTaskAccess().getDashboardAssignment_8(), "rule__Task__DashboardAssignment_8");
			builder.put(grammarAccess.getFileExtractorAccess().getNameAssignment_0(), "rule__FileExtractor__NameAssignment_0");
			builder.put(grammarAccess.getFileExtractorAccess().getPathAssignment_2(), "rule__FileExtractor__PathAssignment_2");
			builder.put(grammarAccess.getFileExtractorAccess().getNullreplacementAssignment_3_1(), "rule__FileExtractor__NullreplacementAssignment_3_1");
			builder.put(grammarAccess.getFileExtractorAccess().getNullreplacementAssignment_3_2_1(), "rule__FileExtractor__NullreplacementAssignment_3_2_1");
			builder.put(grammarAccess.getDataFilteringAccess().getFileextractorAssignment_1(), "rule__DataFiltering__FileextractorAssignment_1");
			builder.put(grammarAccess.getDataFilteringAccess().getFilteringstepAssignment_2_0_1(), "rule__DataFiltering__FilteringstepAssignment_2_0_1");
			builder.put(grammarAccess.getDataFilteringAccess().getFilteringstepAssignment_2_0_2_1(), "rule__DataFiltering__FilteringstepAssignment_2_0_2_1");
			builder.put(grammarAccess.getDataFilteringAccess().getProcessingstepAssignment_2_1_1(), "rule__DataFiltering__ProcessingstepAssignment_2_1_1");
			builder.put(grammarAccess.getDataFilteringAccess().getProcessingstepAssignment_2_1_2_1(), "rule__DataFiltering__ProcessingstepAssignment_2_1_2_1");
			builder.put(grammarAccess.getDataFilteringAccess().getCountpreprocessingstepAssignment_2_2_1(), "rule__DataFiltering__CountpreprocessingstepAssignment_2_2_1");
			builder.put(grammarAccess.getDataFilteringAccess().getCountpreprocessingstepAssignment_2_2_2_1(), "rule__DataFiltering__CountpreprocessingstepAssignment_2_2_2_1");
			builder.put(grammarAccess.getCountPreprocessingStepAccess().getAxisAssignment_0(), "rule__CountPreprocessingStep__AxisAssignment_0");
			builder.put(grammarAccess.getCountPreprocessingStepAccess().getCountqualistatementAssignment_2_0(), "rule__CountPreprocessingStep__CountqualistatementAssignment_2_0");
			builder.put(grammarAccess.getCountPreprocessingStepAccess().getCountquantistatementAssignment_2_1(), "rule__CountPreprocessingStep__CountquantistatementAssignment_2_1");
			builder.put(grammarAccess.getCountPreprocessingStepAccess().getReferenceAssignment_4(), "rule__CountPreprocessingStep__ReferenceAssignment_4");
			builder.put(grammarAccess.getCountQualiStatementAccess().getQualiOperatorAssignment_0(), "rule__CountQualiStatement__QualiOperatorAssignment_0");
			builder.put(grammarAccess.getCountQualiStatementAccess().getLabelAssignment_1(), "rule__CountQualiStatement__LabelAssignment_1");
			builder.put(grammarAccess.getCountQualiStatementAccess().getStatementAssignment_3(), "rule__CountQualiStatement__StatementAssignment_3");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getQuantiOperatorAssignment_0_0_0(), "rule__CountQuantiStatement__QuantiOperatorAssignment_0_0_0");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getRSideAssignment_0_0_1(), "rule__CountQuantiStatement__RSideAssignment_0_0_1");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getLSideAssignment_0_1_0(), "rule__CountQuantiStatement__LSideAssignment_0_1_0");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getRangeOperatorAssignment_0_1_1(), "rule__CountQuantiStatement__RangeOperatorAssignment_0_1_1");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getRSideAssignment_0_1_2(), "rule__CountQuantiStatement__RSideAssignment_0_1_2");
			builder.put(grammarAccess.getCountQuantiStatementAccess().getStatementAssignment_2(), "rule__CountQuantiStatement__StatementAssignment_2");
			builder.put(grammarAccess.getDashBoardAccess().getNameAssignment_0(), "rule__DashBoard__NameAssignment_0");
			builder.put(grammarAccess.getDashBoardAccess().getFileextractorAssignment_2_0(), "rule__DashBoard__FileextractorAssignment_2_0");
			builder.put(grammarAccess.getDashBoardAccess().getPlotAssignment_2_3(), "rule__DashBoard__PlotAssignment_2_3");
			builder.put(grammarAccess.getDashBoardAccess().getPlotAssignment_2_4(), "rule__DashBoard__PlotAssignment_2_4");
			builder.put(grammarAccess.getNullReplacementAccess().getColNameAssignment_0(), "rule__NullReplacement__ColNameAssignment_0");
			builder.put(grammarAccess.getNullReplacementAccess().getLabelAssignment_2_0(), "rule__NullReplacement__LabelAssignment_2_0");
			builder.put(grammarAccess.getNullReplacementAccess().getStatisticaloperationAssignment_2_1(), "rule__NullReplacement__StatisticaloperationAssignment_2_1");
			builder.put(grammarAccess.getQuantitativeFilteringAccess().getAxisAssignment_1(), "rule__QuantitativeFiltering__AxisAssignment_1");
			builder.put(grammarAccess.getQuantitativeFilteringAccess().getOperatorAssignment_2(), "rule__QuantitativeFiltering__OperatorAssignment_2");
			builder.put(grammarAccess.getQuantitativeFilteringAccess().getValuesAssignment_3(), "rule__QuantitativeFiltering__ValuesAssignment_3");
			builder.put(grammarAccess.getQualitativeFilteringAccess().getAxisAssignment_1(), "rule__QualitativeFiltering__AxisAssignment_1");
			builder.put(grammarAccess.getQualitativeFilteringAccess().getOperatorAssignment_2(), "rule__QualitativeFiltering__OperatorAssignment_2");
			builder.put(grammarAccess.getQualitativeFilteringAccess().getLabelsAssignment_3(), "rule__QualitativeFiltering__LabelsAssignment_3");
			builder.put(grammarAccess.getMathOperationAccess().getNewColNameAssignment_0_0(), "rule__MathOperation__NewColNameAssignment_0_0");
			builder.put(grammarAccess.getMathOperationAccess().getLsideAssignment_3(), "rule__MathOperation__LsideAssignment_3");
			builder.put(grammarAccess.getMathOperationAccess().getOperatorAssignment_4(), "rule__MathOperation__OperatorAssignment_4");
			builder.put(grammarAccess.getMathOperationAccess().getRsideAssignment_6(), "rule__MathOperation__RsideAssignment_6");
			builder.put(grammarAccess.getColReferenceAccess().getTargetAssignment_1(), "rule__ColReference__TargetAssignment_1");
			builder.put(grammarAccess.getStatisticalOperationAccess().getOperatorAssignment_0(), "rule__StatisticalOperation__OperatorAssignment_0");
			builder.put(grammarAccess.getStatisticalOperationAccess().getColreferenceAssignment_2(), "rule__StatisticalOperation__ColreferenceAssignment_2");
			builder.put(grammarAccess.getBarPlotAccess().getNameAssignment_2(), "rule__BarPlot__NameAssignment_2");
			builder.put(grammarAccess.getBarPlotAccess().getXAxisAssignment_5(), "rule__BarPlot__XAxisAssignment_5");
			builder.put(grammarAccess.getBarPlotAccess().getYAxisAssignment_7(), "rule__BarPlot__YAxisAssignment_7");
			builder.put(grammarAccess.getBarPlotAccess().getLocationAssignment_8_1(), "rule__BarPlot__LocationAssignment_8_1");
			builder.put(grammarAccess.getBarPlotAccess().getColorsAssignment_9_1(), "rule__BarPlot__ColorsAssignment_9_1");
			builder.put(grammarAccess.getBarPlotAccess().getThicknessAssignment_10_1(), "rule__BarPlot__ThicknessAssignment_10_1");
			builder.put(grammarAccess.getLinePlotAccess().getNameAssignment_2(), "rule__LinePlot__NameAssignment_2");
			builder.put(grammarAccess.getLinePlotAccess().getXAxisAssignment_5(), "rule__LinePlot__XAxisAssignment_5");
			builder.put(grammarAccess.getLinePlotAccess().getYAxisAssignment_7(), "rule__LinePlot__YAxisAssignment_7");
			builder.put(grammarAccess.getLinePlotAccess().getLocationAssignment_8_1(), "rule__LinePlot__LocationAssignment_8_1");
			builder.put(grammarAccess.getLinePlotAccess().getColorsAssignment_9_1(), "rule__LinePlot__ColorsAssignment_9_1");
			builder.put(grammarAccess.getLinePlotAccess().getThicknessAssignment_10_1(), "rule__LinePlot__ThicknessAssignment_10_1");
			builder.put(grammarAccess.getDonutPlotAccess().getNameAssignment_1(), "rule__DonutPlot__NameAssignment_1");
			builder.put(grammarAccess.getDonutPlotAccess().getCountIDAssignment_3_0_1(), "rule__DonutPlot__CountIDAssignment_3_0_1");
			builder.put(grammarAccess.getDonutPlotAccess().getXAxisAssignment_3_1_1(), "rule__DonutPlot__XAxisAssignment_3_1_1");
			builder.put(grammarAccess.getDonutPlotAccess().getYAxisAssignment_3_1_3(), "rule__DonutPlot__YAxisAssignment_3_1_3");
			builder.put(grammarAccess.getDonutPlotAccess().getLocationAssignment_4_1(), "rule__DonutPlot__LocationAssignment_4_1");
			builder.put(grammarAccess.getDonutPlotAccess().getColorsAssignment_5_1(), "rule__DonutPlot__ColorsAssignment_5_1");
			builder.put(grammarAccess.getDonutPlotAccess().getThicknessAssignment_6_1(), "rule__DonutPlot__ThicknessAssignment_6_1");
			builder.put(grammarAccess.getPiePlotAccess().getNameAssignment_1(), "rule__PiePlot__NameAssignment_1");
			builder.put(grammarAccess.getPiePlotAccess().getCountIDAssignment_3_0_1(), "rule__PiePlot__CountIDAssignment_3_0_1");
			builder.put(grammarAccess.getPiePlotAccess().getXAxisAssignment_3_1_1(), "rule__PiePlot__XAxisAssignment_3_1_1");
			builder.put(grammarAccess.getPiePlotAccess().getYAxisAssignment_3_1_3(), "rule__PiePlot__YAxisAssignment_3_1_3");
			builder.put(grammarAccess.getPiePlotAccess().getLocationAssignment_4_1(), "rule__PiePlot__LocationAssignment_4_1");
			builder.put(grammarAccess.getPiePlotAccess().getColorsAssignment_5_1(), "rule__PiePlot__ColorsAssignment_5_1");
			builder.put(grammarAccess.getPiePlotAccess().getThicknessAssignment_6_1(), "rule__PiePlot__ThicknessAssignment_6_1");
			builder.put(grammarAccess.getPolarPlotAccess().getNameAssignment_1(), "rule__PolarPlot__NameAssignment_1");
			builder.put(grammarAccess.getPolarPlotAccess().getXAxisAssignment_4(), "rule__PolarPlot__XAxisAssignment_4");
			builder.put(grammarAccess.getPolarPlotAccess().getYAxisAssignment_6(), "rule__PolarPlot__YAxisAssignment_6");
			builder.put(grammarAccess.getPolarPlotAccess().getLocationAssignment_7_1(), "rule__PolarPlot__LocationAssignment_7_1");
			builder.put(grammarAccess.getPolarPlotAccess().getColorsAssignment_8_1(), "rule__PolarPlot__ColorsAssignment_8_1");
			builder.put(grammarAccess.getPolarPlotAccess().getThicknessAssignment_9_1(), "rule__PolarPlot__ThicknessAssignment_9_1");
			builder.put(grammarAccess.getScatterPlotAccess().getNameAssignment_1(), "rule__ScatterPlot__NameAssignment_1");
			builder.put(grammarAccess.getScatterPlotAccess().getXAxisAssignment_4(), "rule__ScatterPlot__XAxisAssignment_4");
			builder.put(grammarAccess.getScatterPlotAccess().getYAxisAssignment_6(), "rule__ScatterPlot__YAxisAssignment_6");
			builder.put(grammarAccess.getScatterPlotAccess().getLocationAssignment_7_1(), "rule__ScatterPlot__LocationAssignment_7_1");
			builder.put(grammarAccess.getScatterPlotAccess().getColorsAssignment_8_1(), "rule__ScatterPlot__ColorsAssignment_8_1");
			builder.put(grammarAccess.getScatterPlotAccess().getThicknessAssignment_9_1(), "rule__ScatterPlot__ThicknessAssignment_9_1");
			builder.put(grammarAccess.getRadarPlotAccess().getNameAssignment_1(), "rule__RadarPlot__NameAssignment_1");
			builder.put(grammarAccess.getRadarPlotAccess().getXAxisAssignment_4(), "rule__RadarPlot__XAxisAssignment_4");
			builder.put(grammarAccess.getRadarPlotAccess().getYAxisAssignment_6(), "rule__RadarPlot__YAxisAssignment_6");
			builder.put(grammarAccess.getRadarPlotAccess().getLocationAssignment_7_1(), "rule__RadarPlot__LocationAssignment_7_1");
			builder.put(grammarAccess.getRadarPlotAccess().getColorsAssignment_8_1(), "rule__RadarPlot__ColorsAssignment_8_1");
			builder.put(grammarAccess.getRadarPlotAccess().getThicknessAssignment_9_1(), "rule__RadarPlot__ThicknessAssignment_9_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private BiLangGrammarAccess grammarAccess;

	@Override
	protected InternalBiLangParser createParser() {
		InternalBiLangParser result = new InternalBiLangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BiLangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BiLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
